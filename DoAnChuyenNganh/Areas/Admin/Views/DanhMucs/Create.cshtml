@model DoAnChuyenNganh.Models.EF.DanhMuc

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}


@section naviheader
{
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/home" class="nav-link">Trang chủ</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/danhmucs" class="nav-link">Danh mục</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="#" class="nav-link">Thêm mới</a>
        </li>
    </ul>
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Thêm mới danh mục sản phẩm</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/admin/danhmucs/">Danh mục</a></li>
                    <li class="breadcrumb-item active">Thêm mới</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">

    <!-- Default box -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Thông tin thêm mới danh mục</h3>
        </div>
        <div class="card-body">
            <div class="bs-stepper-content">
                @using (Html.BeginForm("Create", "DanhMucs", FormMethod.Post, new { id = "formThem" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.TenDanhMuc, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TenDanhMuc, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TenDanhMuc, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.MoTa, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.MoTa, new
                                {@*htmlAttributes = new {*@ @class = "form-control",
                                @id = "txtMoTa"
                            } @*}*@)
                                @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DanhMucChaId, "Danh mục cha", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("DanhMucChaId", null, "-- Không có --", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DanhMucChaId, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.TrangThai, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.TrangThai)
                                    @Html.ValidationMessageFor(model => model.TrangThai, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button type="submit" class="btn btn-primary">Lưu</button>
                                <a href="/admin/danhmucs" class="btn btn-danger">Quay lại</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</section>





<div id="thongBaoThem" class="mt-3"></div>
@section scripts{
    <script>
        $(function () {
            $("#formThem").submit(function (them) {
                them.preventDefault();

                // CKEditor update
                for (instance in CKEDITOR.instances) {
                    CKEDITOR.instances[instance].updateElement();
                }

                // Kiểm tra độ dài Mô tả
                var moTa = $("#txtMoTa").val();
                if (moTa.length > 1000) {
                    $("#thongBaoThem").html("<div class='alert alert-danger'>Mô tả không được vượt quá 1000 ký tự!</div>");
                    return;
                }
                $.ajax({
                    url: '@Url.Action("Create", "DanhMucs")',
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function (res) {
                        if (res.success) {
                            //nếu server trả về thành công (res.success == true)
                            $("#thongBaoThem").html("<div class = 'alert alert-success'>" + res.message + "</div>");
                            //Xóa các input bên trong form có id là formThem
                            $("#formThem .form-control").val('');

                            // Reset input + CKEditor
                            $("#formThem .form-control").val('');
                            if (CKEDITOR.instances['txtMoTa']) {
                                CKEDITOR.instances['txtMoTa'].setData('');
                            }

                            //quay lại index sau 1s
                            setTimeout(function () {
                                window.location.href = '@Url.Action("Index", "DanhMucs")';
                            }, 1000);
                        }
                        else {
                            //Nếu server trả về thất bại (res.success == false)
                            $("#thongBaoThem").html("<div class = 'alert alert-danger'>" + res.message + "</div>");
                        }
                    },
                    error: function () {
                        //Nếu có lỗi trong quá trình gửi Ajax
                        $("#thongBaoThem").html("<div class = 'alert alert-danger'> Lỗi trong quá trình gửi. </div>");
                    }
                });
            });
            //xóa thông báo khi người dùng gõ lại
            $("#formThem input, #formThem textarea").on("input", function () {
                $("#thongBaoThem").empty();
            });


            // Khởi tạo CKEditor
            CKEDITOR.replace('txtMoTa', {
                customConfig: '/content/ckeditor/config.js',
                extraAllowedContent: 'span',
            });
        });
    </script>
}

