@model DoAnChuyenNganh.Models.EF.BienTheSanPham

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}


@section naviheader
{
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/home" class="nav-link">Trang chủ</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/bienthesanphams" class="nav-link">Biến thể sản phẩm</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="#" class="nav-link">Cập nhật</a>
        </li>
    </ul>
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Cập nhật biến thể sản phẩm</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/admin/bienthesanphams/">Biến thể sản phẩm</a></li>
                    <li class="breadcrumb-item active">Cập nhật</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">

    <!-- Default box -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Thông tin cập nhật biến thể sản phẩm</h3>
        </div>
        <div class="card-body">
            <div class="bs-stepper-content">

                @using (Html.BeginForm("Edit", "BienTheSanPhams", FormMethod.Post, new { id = "formSua" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.BienTheId)


                        <div class="form-group">
                            <label class="control-label col-md-2">Áp dụng cho sản phẩm</label>
                            <div class="col-md-10">
                                @Html.ListBox("sanPhamIds", ViewBag.SanPhamIds as MultiSelectList,
                                    new { @class = "form-control select2", @multiple = "multiple", @id = "ddlSanPhams" })
                                <small class="text-muted">Chọn các sản phẩm muốn áp dụng biến thể này (sản phẩm đã có sẽ được chọn sẵn).</small>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SKU, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SKU, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.HiddenFor(model => model.SKU)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Gia, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Gia, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Gia, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.GiaKhuyenMai, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.GiaKhuyenMai, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.GiaKhuyenMai, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.MaVach, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.MaVach, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MaVach, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TrangThai, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.TrangThai)
                                    @Html.ValidationMessageFor(model => model.TrangThai, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>


                        <div class="form-group">
                            <label class="control-label col-md-2">Thuộc tính</label>
                            <div class="col-md-10">
                                @Html.ListBox("ThuocTinhIds", (MultiSelectList)ViewBag.ThuocTinhIds,
                                    new { @class = "form-control select2", multiple = "multiple", id = "ddlThuocTinhs" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Giá trị thuộc tính", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.ListBox("giaTriThuocTinhIds", (MultiSelectList)ViewBag.giaTriThuocTinhIds,
                                    new { @class = "form-control select2", id = "ddlGiaTriThuocTinhs", multiple = "multiple" })
                            </div>
                        </div>



                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button type="submit" class="btn btn-primary">Cập nhật</button>
                                <a href="/admin/bienthesanphams" class="btn btn-danger">Quay lại</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</section>


<div id="thongBaoSua" class="mt-3"></div>
@section scripts{
    <script>
        $(function () {
            // Khởi tạo select2
                $('.select2').select2();
                    // Giữ lại các sản phẩm đã áp dụng khi load form sửa
                var selectedSanPhams = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(
                    ((MultiSelectList)ViewBag.SanPhamIds).SelectedValues));
                $("#ddlSanPhams").val(selectedSanPhams).trigger('change');

                // GIỮ selected values ngay khi load lần đầu
                var selectedGiaTris = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(
                                    Model.GiaTriThuocTinhs.Select(g => g.GiaTriId).ToList()));
                $("#ddlGiaTriThuocTinhs").val(selectedGiaTris).trigger('change');
                // GIỮ selected values cho Thuộc tính khi load lần đầu
                var selectedThuocTinhs = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(
                                    Model.GiaTriThuocTinhs.Select(g => g.ThuocTinhId).Distinct().ToList()));
                $("#ddlThuocTinhs").val(selectedThuocTinhs).trigger('change');

                // Khi thay đổi thuộc tính -> nạp lại giá trị
                $("#ddlThuocTinhs").change(function () {
                    var thuocTinhIds = $(this).val();
                    if (thuocTinhIds && thuocTinhIds.length > 0) {
                        $.ajax({
                            url: '@Url.Action("GetGiaTriByThuocTinhs", "BienTheSanPhams")',
                            type: 'POST',
                            data: { ids: thuocTinhIds },
                            traditional: true,
                            success: function (data) {
                                var ddl = $("#ddlGiaTriThuocTinhs");
                                ddl.empty();
                                $.each(data, function (i, item) {
                                    ddl.append($('<option/>', { value: item.Value, text: item.Text }));
                                });

                                // sau khi load lại, giữ các giá trị đã chọn (nếu vẫn còn tồn tại)
                                ddl.val(selectedGiaTris).trigger('change');
                            }
                        });
                    }
                });



            $("#formSua").submit(function (sua) {
                sua.preventDefault(); //chặn form gửi truyền thống
                $.ajax({
                    url: '@Url.Action("Edit", "BienTheSanPhams")',
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function (res) {
                        if (res.success) {
                            $("#thongBaoSua").html("<div class = 'alert alert-success'>" + res.message + "</div>");


                            //quay lại index sau 1s
                            setTimeout(function () {
                                window.location.href = '@Url.Action("Index", "BienTheSanPhams")';
                            }, 1000);
                        }
                        else {
                            $("#thongBaoSua").html("<div class = 'alert alert-danger'>" + res.message + "</div>");
                        }
                    },
                    error: function () {
                        $("#thongBaoSua").html("<div class = 'alert alert-danger'> Lỗi khi gửi dữ liệu. </div>");
                    }
                });
            });
            //xóa thông báo khi người dùng gõ lại
            $("#formSua input, #formSua textarea").on("input", function () {
                $("#thongBaoSua").empty();
            });

        });

    </script>
}




@section styles {
    <style>
        .select2-selection__rendered {
            display: flex !important;
            flex-wrap: wrap !important;
        }

        .select2-selection__choice {
            background: #007bff !important;
            color: #fff !important;
            border: none !important;
            margin: 2px !important;
            border-radius: 4px !important;
        }
    </style>
}


<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
