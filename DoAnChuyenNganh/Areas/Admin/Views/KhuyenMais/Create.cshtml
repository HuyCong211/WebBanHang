@model DoAnChuyenNganh.Models.EF.KhuyenMai

@{
    ViewBag.Title = "Thêm mới khuyến mại";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}


@section naviheader
{
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/home" class="nav-link">Trang chủ</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/khuyenmais" class="nav-link">Khuyến mại</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="#" class="nav-link">Thêm mới</a>
        </li>
    </ul>
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Thêm mới khuyến mại</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/admin/khuyenmais/">Khuyến mại</a></li>
                    <li class="breadcrumb-item active">Thêm mới</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>



<!-- Main content -->
<section class="content">
    <!-- Default box -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Thông tin thêm mới khuyến mại</h3>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-12">

                    @using (Html.BeginForm("Create", "KhuyenMais", FormMethod.Post, new { id = "formThem" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <h4>Khuyến Mại</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.MaKM, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.MaKM, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MaKM, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TenKM, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.TenKM, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.TenKM, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Loai, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Loai, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Loai, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.GiaTri, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.GiaTri, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.GiaTri, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.NgayBatDau, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-3">
                                    @Html.TextBoxFor(model => model.NgayBatDau,
                                        new
                                             {
                                            @class = "form-control",
                                            type = "date",
                                            value = Model.NgayBatDau.HasValue
                                                    ? Model.NgayBatDau.Value.ToString("yyyy-MM-dd")
                                                    : DateTime.Now.ToString("yyyy-MM-dd")
                                        })
                                    @Html.ValidationMessageFor(model => model.NgayBatDau, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.NgayKetThuc, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-3">
                                    @Html.TextBoxFor(model => model.NgayKetThuc,
                                        new
                                             {
                                            @class = "form-control",
                                            type = "date",
                                            value = Model.NgayKetThuc.HasValue
                                                    ? Model.NgayKetThuc.Value.ToString("yyyy-MM-dd")
                                                    : DateTime.Now.ToString("yyyy-MM-dd")
                                        })
                                    @Html.ValidationMessageFor(model => model.NgayKetThuc, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.DieuKien, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.DieuKien, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.DieuKien, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TrangThai, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.TrangThai)
                                        @Html.ValidationMessageFor(model => model.TrangThai, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Chọn sản phẩm áp dụng", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <select id="SanPhamIds" name="SanPhamIds" multiple="multiple" class="form-control">
                                        @foreach (var sp in (IEnumerable<DoAnChuyenNganh.Models.EF.SanPham>)ViewBag.SanPhams)
                                        {
                                            <option value="@sp.SanPhamId">@sp.TenSanPham</option>
                                        }
                                    </select>
                                </div>
                            </div>





                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <button type="submit" class="btn btn-primary">Thêm</button>
                                    <a href="/admin/khuyenmais" class="btn btn-danger">Quay lại</a>
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
</section>



<div id="thongBaoThem" class="mt-3"></div>
@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {

            //chỗ chọn sản phẩm áp dụng
            $(document).ready(function () {
                $("#SanPhamIds").select2({
                    placeholder: "Chọn sản phẩm...",
                    allowClear: true
                });
            });

            $("#formThem").submit(function (them) {
                them.preventDefault();
                $.ajax({
                    url: '@Url.Action("Create", "KhuyenMais")',
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function (res) {
                        if (res.success) {
                            //nếu server trả về thành công (res.success == true)
                            $("#thongBaoThem").html("<div class = 'alert alert-success'>" + res.message + "</div>");
                            //Xóa các input bên trong form có id là formThem
                            $("#formThem .form-control").val('');

                            //quay lại index sau 1s
                            setTimeout(function () {
                                window.location.href = '@Url.Action("Index", "KhuyenMais")';
                            }, 1000);
                        }
                        else {
                            //Nếu server trả về thất bại (res.success == false)
                            $("#thongBaoThem").html("<div class = 'alert alert-danger'>" + res.message + "</div>");
                        }
                    },
                    error: function () {
                        //Nếu có lỗi trong quá trình gửi Ajax
                        $("#thongBaoThem").html("<div class = 'alert alert-danger'> Lỗi trong quá trình gửi. </div>");
                    }
                });
            });
            //xóa thông báo khi người dùng gõ lại
            $("#formThem input, #formThem textarea").on("input", function () {
                $("#thongBaoThem").empty();
            });
        });
    </script>
}

@section styles {
    <style>
        .select2-selection__rendered {
            display: flex !important;
            flex-wrap: wrap !important;
        }

        .select2-selection__choice {
            background: #007bff !important;
            color: #fff !important;
            border: none !important;
            margin: 2px !important;
            border-radius: 4px !important;
        }
    </style>
}



<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
